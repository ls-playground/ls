name: Sync Project Cards

on:
  issues:
    types: [labeled, unlabeled, edited]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.issue.node_id }}
    cancel-in-progress: true

jobs:
  set-column:
    runs-on: ubuntu-latest
    steps:
      - name: Project status change necessary?
        uses: actions/github-script@v6
        id: determine-status
        with:
          script: |
            const listLabelsOnIssueResponse = await github.rest.issues.listLabelsOnIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const issueLabels = listLabelsOnIssueResponse.data.map(e => e.name);
            const mapping = {
                "status: triage needed": "status: triage needed ❓",
                "status: confirmed": "status: backlog 🗃",
                "status: accepted": "status: backlog 🗃",
                "status: stale": "status: stale 😴",
                "status: response required": "status: response required 🗨",
                "status: resolved/stale": "status: stale 😴",
                "status: resolved/fixed": "status: closed ✔",
                "status: resolved/workaround": "status: closed ✔"
            };
            let result = false;
            for (const label in mapping) {
              if (issueLabels.includes(label)) {
                result = mapping[label]
              }
            }
            return result

      - name: Generate Token
        if: ${{steps.determine-status.outputs.result}}
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.PROJECT_SYNC_APP_ID }}
          private_key: ${{ secrets.PROJECT_SYNC_APP_PEM }}

      - name: Sync Card Status
        if: ${{steps.determine-status.outputs.result}}
        uses: leonsteinhaeuser/project-beta-automations@v2.1.0
        env:
          DEBUG_LOG: "true"
        with:
          gh_token: ${{ steps.generate_token.outputs.token }}
          organization: ls-playground
          project_id: 1
          resource_node_id: ${{ github.event.issue.node_id }}
          status_value: ${{steps.determine-status.outputs.result}}
